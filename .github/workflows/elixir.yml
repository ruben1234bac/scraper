name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-22.04  

    services:
      db:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 
      with:
        elixir-version: '1.18' 
        otp-version: '26.0' 
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Compile with warnings as errors
      run: MIX_ENV=test mix compile --warnings-as-errors
    - name: Setup database
      run: MIX_ENV=test mix ecto.create && MIX_ENV=test mix ecto.migrate
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost/scraper_test
    - name: Run Dialyzer
      run: mix dialyzer --halt-exit-status
    - name: Run Credo in strict mode
      run: mix credo --strict
    - name: Run tests with 100% coverage check
      run: MIX_ENV=test mix coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DATABASE_URL: postgres://postgres:postgres@localhost/scraper_test